version: '3.4'

networks: 
  kong-net:
    driver: bridge
  keycloak-net:
    driver: bridge

volumes:
  kong-datastore:
  keycloak-datastore:

services:

  app:
    build:
      context: .
      dockerfile: Dockerfile  # Your existing app Dockerfile
    ports:
      - "3006:3006" # good-bye service
    depends_on:
      - kong
      - keycloak
    networks:
      - kong-net
      - keycloak-net
    environment:
      - NODE_ENV=development
    volumes:
      - ./data:/data # Maps a local 'data' folder to '/app/data' in the container

  
  kong-db:
    image: postgres:11-alpine
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "15434:5432"
    environment:
      POSTGRES_DB:       api-gw
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kong

  kong:
    build:
      context: .
      dockerfile: Dockerfile.kong      
    image: kong-oidc:latest
    depends_on:
      - kong-db
    networks:
      - kong-net
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener (SSL)
      - "8444:8444" # Admin API (SSL)
      - "8002:8002"
    environment:
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      api-gw
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          bundled,oidc
      KONG_LOG_LEVEL:        debug


  konga:
    image: pantsel/konga:0.14.9
    depends_on:
      - kong
    networks:
      - kong-net
    ports:
      - "1337:1337" # Konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_PORT: '5432'
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: api-gw
      NODE_ENV: development

  keycloak-db:
    image: postgres:14-alpine
    volumes: 
      - keycloak-datastore:/var/lib/postgresql/data
    networks:
      - keycloak-net
    ports:
      - "25434:5432"
    environment:
      POSTGRES_DB:       keycloak
      POSTGRES_USER:     keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.1
    depends_on:
      - keycloak-db
    command: start-dev
    networks:
      - keycloak-net
    ports:
      - "8080:8080"
    environment:
      KC_DB:       postgres
      KC_DB_URL:   jdbc:postgresql://keycloak-db/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password
      KEYCLOAK_ADMIN:           admin
      KEYCLOAK_ADMIN_PASSWORD:  admin
      KC_METRICS_ENABLED: 1
      KEYCLOAK_HOSTNAME: "192.168.21.37"
      KEYCLOAK_LISTEN_HOST: "0.0.0.0"

  
